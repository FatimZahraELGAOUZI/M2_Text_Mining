shiny::runApp()
runApp()
shinyServer(function(input, output) {
#-----------------------------------------------------------------------------
# Tableau récapitulatif
#-----------------------------------------------------------------------------
Tableau = reactive({
Date_début = as.Date(as.character(input$Duree[1]))
Date_fin = as.Date(as.character(input$Duree[2]))
Majoration = as.numeric(input$Majoration)
Prix_Berceau = as.numeric(input$Prix_Berceau)
N = time_length(interval(start = Date_début, end = Date_fin), unit = "years")
if (N <= 1) {
Tableau = cbind.data.frame(
Année = c("Année n°1"),
Début = c(Date_début),
Fin = c(Date_fin),
CoutAnnuel = c(Prix_Berceau)
)
} else if ((N > 1) & (N < 2)) {
Tableau = cbind.data.frame(
Année = c("Année n°1","Année n°2"),
Début = c(Date_début, Date_début+years(1)),
Fin = c(Date_début + years(1)-days(1), Date_fin),
CoutAnnuel = c(Prix_Berceau, Majoration*Prix_Berceau)
)
} else if ((N > 2) & (N < 3)) {
Tableau = cbind.data.frame(
Année = c("Année n°1","Année n°2","Année n°3"),
Début = c(Date_début, Date_début+years(1), Date_début+years(2)),
Fin = c(Date_début+years(1)-days(1), Date_début+years(2)-days(1), Date_fin),
CoutAnnuel = c(Prix_Berceau, Majoration*Prix_Berceau, (Majoration**2)*Prix_Berceau)
)
} else if ((N > 3) & (N < 4)) {
Tableau = cbind.data.frame(
Année = c("Année n°1","Année n°2","Année n°3","Année n°4"),
Début = c(Date_début, Date_début+years(1), Date_début+years(2), Date_début+years(3)),
Fin = c(Date_début+years(1)-days(1), Date_début+years(2)-days(1), Date_début+years(3)-days(1), Date_fin),
CoutAnnuel = c(Prix_Berceau, Majoration*Prix_Berceau, (Majoration**2)*Prix_Berceau, (Majoration**3)*Prix_Berceau)
)
} else { Tableau = NULL }
Tableau$CoutAnnuel = round(Tableau$CoutAnnuel, 2)
Tableau$NbJoursAnnée = as.numeric(difftime(Tableau$Début+years(1)-days(1), Tableau$Début, units="days"))
Tableau$NbJoursContrat = as.numeric(difftime(Tableau$Fin, Tableau$Début, units="days"))
Tableau$MontantAnnuel = round((Tableau$NbJoursContrat/ Tableau$NbJoursAnnée) * Tableau$CoutAnnuel, 2)
return(Tableau)
})
output$preview = renderDataTable({
head(Tableau(), 10)
},  options = list( dom = 't'))
#-----------------------------------------------------------------------------
# Montant Total HT et TTC
#-----------------------------------------------------------------------------
output$MontantTotal = renderDataTable({
Tab = Tableau()
Tab1 = Tab[, colnames(Tab) %in% c("Année","MontantAnnuel")]
TVA = 20
Com_pourc = as.numeric(input$Commission)
Com = (Com_pourc/100)+1
Total_TTC = round(sum(Tab$MontantAnnuel),2)
Montant_ComHT = round(Total_TTC * (Com-1),2)
Montant_ComTTC = round(Montant_ComHT * ((TVA/100)+1),2)
MontantTotal = rbind.data.frame(
Tab1,
c("Commission", paste(Com_pourc, " %")),
c("TVA", paste(TVA, " %")),
c("Montant Contrat (TTC)", paste(Total_TTC, "€ (TTC)")),
c("Montant Commission (HT)", paste(Montant_ComHT, "€ (HT)")),
c("Montant Commission avec TVA (TTC)",  paste(Montant_ComTTC, "€ (TTC)"))
)
head(MontantTotal,20)
},  options = list( dom = 't'))
#-----------------------------------------------------------------------------
# Tableau des echéances
#-----------------------------------------------------------------------------
output$TabEch = renderDataTable({
Tab = Tableau()
Date_début = as.Date(as.character(input$Duree[1]))
TVA = 20
Com_pourc = as.numeric(input$Commission)
Com = (Com_pourc/100)+1
Total_TTC = round(sum(Tab$MontantAnnuel),2)
Montant_ComHT = round(Total_TTC * (Com-1),2)
Montant_ComTTC = round(Montant_ComHT * ((TVA/100)+1),2)
Nb_echeance = as.numeric(input$Nb_echeance)
liste = as.Date(c())
A = 1:Nb_echeance
for (i in A){
liste = c(liste, Date_début+days(10)+months(3*(i-1)))
}
Tab_ech = cbind.data.frame(
Echeance = A,
Date_ech = liste,
Montant_ech = ((Montant_ComTTC * 100) %/% Nb_echeance)/100
)
Tab_ech$Montant_ech[nrow(Tab_ech)] = Montant_ComTTC - sum(Tab_ech$Montant_ech[1:nrow(Tab_ech)-1])
Tab_ech$Date_ech[2:nrow(Tab_ech)] = update(Tab_ech$Date_ech[2:nrow(Tab_ech)], days = 15)
Tab_ech$Montant_ech_HT = round(Tab_ech$Montant_ech/1.2, 2)
Tab_ech$Montant_ech_HT[nrow(Tab_ech)] = Montant_ComHT - sum(Tab_ech$Montant_ech_HT[1:nrow(Tab_ech)-1])
colnames(Tab_ech) = c("Echéance", "Date de l'échéance", "Montant échéance (TTC)", "Montant échéance (HT)")
head(Tab_ech,20)
},  options = list( dom = 't'))
})
server = shinyServer(function(input, output) {
#-----------------------------------------------------------------------------
# Tableau récapitulatif
#-----------------------------------------------------------------------------
Tableau = reactive({
Date_début = as.Date(as.character(input$Duree[1]))
Date_fin = as.Date(as.character(input$Duree[2]))
Majoration = as.numeric(input$Majoration)
Prix_Berceau = as.numeric(input$Prix_Berceau)
N = time_length(interval(start = Date_début, end = Date_fin), unit = "years")
if (N <= 1) {
Tableau = cbind.data.frame(
Année = c("Année n°1"),
Début = c(Date_début),
Fin = c(Date_fin),
CoutAnnuel = c(Prix_Berceau)
)
} else if ((N > 1) & (N < 2)) {
Tableau = cbind.data.frame(
Année = c("Année n°1","Année n°2"),
Début = c(Date_début, Date_début+years(1)),
Fin = c(Date_début + years(1)-days(1), Date_fin),
CoutAnnuel = c(Prix_Berceau, Majoration*Prix_Berceau)
)
} else if ((N > 2) & (N < 3)) {
Tableau = cbind.data.frame(
Année = c("Année n°1","Année n°2","Année n°3"),
Début = c(Date_début, Date_début+years(1), Date_début+years(2)),
Fin = c(Date_début+years(1)-days(1), Date_début+years(2)-days(1), Date_fin),
CoutAnnuel = c(Prix_Berceau, Majoration*Prix_Berceau, (Majoration**2)*Prix_Berceau)
)
} else if ((N > 3) & (N < 4)) {
Tableau = cbind.data.frame(
Année = c("Année n°1","Année n°2","Année n°3","Année n°4"),
Début = c(Date_début, Date_début+years(1), Date_début+years(2), Date_début+years(3)),
Fin = c(Date_début+years(1)-days(1), Date_début+years(2)-days(1), Date_début+years(3)-days(1), Date_fin),
CoutAnnuel = c(Prix_Berceau, Majoration*Prix_Berceau, (Majoration**2)*Prix_Berceau, (Majoration**3)*Prix_Berceau)
)
} else { Tableau = NULL }
Tableau$CoutAnnuel = round(Tableau$CoutAnnuel, 2)
Tableau$NbJoursAnnée = as.numeric(difftime(Tableau$Début+years(1)-days(1), Tableau$Début, units="days"))
Tableau$NbJoursContrat = as.numeric(difftime(Tableau$Fin, Tableau$Début, units="days"))
Tableau$MontantAnnuel = round((Tableau$NbJoursContrat/ Tableau$NbJoursAnnée) * Tableau$CoutAnnuel, 2)
return(Tableau)
})
output$preview = renderDataTable({
head(Tableau(), 10)
},  options = list( dom = 't'))
#-----------------------------------------------------------------------------
# Montant Total HT et TTC
#-----------------------------------------------------------------------------
output$MontantTotal = renderDataTable({
Tab = Tableau()
Tab1 = Tab[, colnames(Tab) %in% c("Année","MontantAnnuel")]
TVA = 20
Com_pourc = as.numeric(input$Commission)
Com = (Com_pourc/100)+1
Total_TTC = round(sum(Tab$MontantAnnuel),2)
Montant_ComHT = round(Total_TTC * (Com-1),2)
Montant_ComTTC = round(Montant_ComHT * ((TVA/100)+1),2)
MontantTotal = rbind.data.frame(
Tab1,
c("Commission", paste(Com_pourc, " %")),
c("TVA", paste(TVA, " %")),
c("Montant Contrat (TTC)", paste(Total_TTC, "€ (TTC)")),
c("Montant Commission (HT)", paste(Montant_ComHT, "€ (HT)")),
c("Montant Commission avec TVA (TTC)",  paste(Montant_ComTTC, "€ (TTC)"))
)
head(MontantTotal,20)
},  options = list( dom = 't'))
#-----------------------------------------------------------------------------
# Tableau des echéances
#-----------------------------------------------------------------------------
output$TabEch = renderDataTable({
Tab = Tableau()
Date_début = as.Date(as.character(input$Duree[1]))
TVA = 20
Com_pourc = as.numeric(input$Commission)
Com = (Com_pourc/100)+1
Total_TTC = round(sum(Tab$MontantAnnuel),2)
Montant_ComHT = round(Total_TTC * (Com-1),2)
Montant_ComTTC = round(Montant_ComHT * ((TVA/100)+1),2)
Nb_echeance = as.numeric(input$Nb_echeance)
liste = as.Date(c())
A = 1:Nb_echeance
for (i in A){
liste = c(liste, Date_début+days(10)+months(3*(i-1)))
}
Tab_ech = cbind.data.frame(
Echeance = A,
Date_ech = liste,
Montant_ech = ((Montant_ComTTC * 100) %/% Nb_echeance)/100
)
Tab_ech$Montant_ech[nrow(Tab_ech)] = Montant_ComTTC - sum(Tab_ech$Montant_ech[1:nrow(Tab_ech)-1])
Tab_ech$Date_ech[2:nrow(Tab_ech)] = update(Tab_ech$Date_ech[2:nrow(Tab_ech)], days = 15)
Tab_ech$Montant_ech_HT = round(Tab_ech$Montant_ech/1.2, 2)
Tab_ech$Montant_ech_HT[nrow(Tab_ech)] = Montant_ComHT - sum(Tab_ech$Montant_ech_HT[1:nrow(Tab_ech)-1])
colnames(Tab_ech) = c("Echéance", "Date de l'échéance", "Montant échéance (TTC)", "Montant échéance (HT)")
head(Tab_ech,20)
},  options = list( dom = 't'))
})
# Create Shiny object
shinyApp(ui, server)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
